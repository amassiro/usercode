##########################################################

##########################################################

var
   ########################
   #### Control region ####

   e1A, e2A, mu1A, mu2A,
   peeA, pemuA, pmueA, pmumuA,
   NeeA, NemuA, NmueA, NmumuA,
   NtotA,
   pA[4],   pAtemp[4],
   NA[4],

   e1B, e2B, mu1B, mu2B,
   peeB, pemuB, pmueB, pmumuB,
   NeeB, NemuB, NmueB, NmumuB,
   NtotB,
   pB[4],   pBtemp[4],
   NB[4],
   
   p[8],
   N[8],
   Ntot,

   Ree, Rmumu, 

   NDYeeA, NDYmumuA,
   NDYeeB, NDYmumuB,


   #######################
   #### Signal region ####

   e1Amet, e2Amet, mu1Amet, mu2Amet,
   peeAmet, pemuAmet, pmueAmet, pmumuAmet,
   NeeAmet, NemuAmet, NmueAmet, NmumuAmet,
   NtotAmet,
   pAmet[4],
   NAmet[4],

   e1Bmet, e2Bmet, mu1Bmet, mu2Bmet,
   peeBmet, pemuBmet, pmueBmet, pmumuBmet,
   NeeBmet, NemuBmet, NmueBmet, NmumuBmet,
   NtotBmet,
   pBmet[4],
   NBmet[4],
   
   pmet[8],
   Nmet[8],
   Ntotmet,

   NtotABeemet, NtotABmumumet,
   peeBFinal, pmumuBFinal,


   Reemet, Rmumumet, 

   NDYeeAmet, NDYmumuAmet,
   NDYeeBmet, NDYmumuBmet

 

##########################################################

data {

 ########################
 #### Control region ####

 NtotA <- NeeA + NemuA + NmueA + NmumuA
 NtotB <- NeeB + NemuB + NmueB + NmumuB
 Ntot  <- NtotA + NtotB

 NA[1] <- NeeA
 NA[2] <- NemuA
 NA[3] <- NmueA
 NA[4] <- NmumuA

 NB[1] <- NeeB
 NB[2] <- NemuB
 NB[3] <- NmueB
 NB[4] <- NmumuB


 N[1] <- NeeA
 N[2] <- NemuA
 N[3] <- NmueA
 N[4] <- NmumuA
 N[5] <- NeeB
 N[6] <- NemuB
 N[7] <- NmueB
 N[8] <- NmumuB


 #######################
 #### Signal region ####

 NtotAmet <- NeeAmet + NemuAmet + NmueAmet + NmumuAmet
 NtotBmet <- NeeBmet + NemuBmet + NmueBmet + NmumuBmet
 Ntotmet  <- NtotAmet + NtotBmet
 Neetotmet    <- NeeAmet + NeeBmet
 Nmumutotmet  <- NmumuAmet + NmumuBmet

 NAmet[1] <- NeeAmet
 NAmet[2] <- NemuAmet
 NAmet[3] <- NmueAmet
 NAmet[4] <- NmumuAmet

 NBmet[1] <- NeeBmet
 NBmet[2] <- NemuBmet
 NBmet[3] <- NmueBmet
 NBmet[4] <- NmumuBmet


 Nmet[1] <- NeeAmet
 Nmet[2] <- NemuAmet
 Nmet[3] <- NmueAmet
 Nmet[4] <- NmumuAmet
 Nmet[5] <- NeeBmet
 Nmet[6] <- NemuBmet
 Nmet[7] <- NmueBmet
 Nmet[8] <- NmumuBmet


 NeeBmetTemp   <- NeeBmet
 NmumuBmetTemp <- NmumuBmet

}

##########################################################

model
{

 ###############
 #### model ####
 ###############


 ########################
 #### control region ####

 ###########################################
 ##### Multinomial: ee, emu, mue, mumu #####
 ###########################################

 ##################################
 ##### Probability definition #####
 ##################################


 ################
 #### A zone ####
 ################

 peeA   <- (0.5 * DYAInit * e1A * e2A + 0.25 * OtherAInit * e1AOther * e2AOther) / NtotA
 pemuA  <- 0.25 * OtherAInit * e1AOther * mu2AOther / NtotA
 pmueA  <- pemuA * mu1AOther * e2AOther / e1AOther / mu2AOther
 pmumuA <- (0.5 * DYAInit * mu1A * mu2A + 0.25 * OtherAInit * mu1AOther * mu2AOther) / NtotA

 pA[1] <- peeA
 pA[2] <- pemuA
 pA[3] <- pmueA
 pA[4] <- pmumuA


 ################
 #### B zone ####
 ################

 peeB   <- (0.5 * DYBInit * e1B * e2B + 0.25 * OtherBInit * e1BOther * e2BOther) / NtotB
 pemuB  <- 0.25 * OtherBInit * e1BOther * mu2BOther / NtotB
 pmueB  <- pemuB * mu1BOther * e2BOther / e1BOther / mu2BOther
 pmumuB <- (0.5 * DYBInit * mu1B * mu2B + 0.25 * OtherBInit * mu1BOther * mu2BOther) / NtotB

 pB[1] <- peeB
 pB[2] <- pemuB
 pB[3] <- pmueB
 pB[4] <- pmumuB


 #########################
 #### multinomial A+B ####
 #########################

 totP <- pA[1] + pA[2] + pA[3] + pA[4] + pB[1] + pB[2] + pB[3] + pB[4]
 
 p[1] <- pA[1] / totP
 p[2] <- pA[2] / totP
 p[3] <- pA[3] / totP
 p[4] <- pA[4] / totP
 p[5] <- pB[1] / totP
 p[6] <- pB[2] / totP
 p[7] <- pB[3] / totP
 p[8] <- pB[4] / totP

 N ~ dmulti (p, Ntot)


 ##########
 ### ee ###

 meanNDYeeA <-  p[1] / (0.5 * DYAInit * e1A * e2A + 0.25 * OtherAInit * e1AOther * e2AOther) * (0.5 * DYAInit * e1A * e2A) * Ntot
 meanNDYeeB <-  p[5] / (0.5 * DYBInit * e1B * e2B + 0.25 * OtherBInit * e1BOther * e2BOther) * (0.5 * DYBInit * e1B * e2B) * Ntot
 NDYeeA <-  (0.5 * DYAInit * e1A * e2A) / NtotA
 NDYeeB <-  (0.5 * DYBInit * e1B * e2B) / NtotB

 Ree       <- ( NDYeeA ) / ( NDYeeB )
 meanRee   <- ( meanNDYeeA ) / ( meanNDYeeB )
 ReeSimple <- (NeeA - sqrt(NeeA / NmumuA * NemuA * NmueA) ) / (NeeB - sqrt(NeeB / NmumuB * NemuB * NmueB))
 
 ############
 ### mumu ###

 meanNDYmumuA <-  p[4] / (0.5 * DYAInit * mu1A * mu2A + 0.25 * OtherAInit * mu1AOther * mu2AOther) * (0.5 * DYAInit * mu1A * mu2A) * Ntot
 meanNDYmumuB <-  p[8] / (0.5 * DYBInit * mu1B * mu2B + 0.25 * OtherBInit * mu1BOther * mu2BOther) * (0.5 * DYBInit * mu1B * mu2B) * Ntot
 NDYmumuA <-  (0.5 * DYAInit * mu1A * mu2A) / NtotA
 NDYmumuB <-  (0.5 * DYBInit * mu1B * mu2B) / NtotB

 Rmumu     <- ( NDYmumuA ) / ( NDYmumuB )
 meanRmumu <- ( meanNDYmumuA ) / ( meanNDYmumuB )
 RmumuSimple   <- (NmumuA - sqrt(NmumuA / NeeA * NmueA * NemuA) ) / (NmumuB - sqrt(NmumuB / NeeB * NmueB * NemuB)) 
  
  



 ################
 #### priors ####
 ################

# DYAInit    ~ dunif (1, 20*NDYMCA)
# OtherAInit ~ dnorm (NotherMCA/NDYMCA*DYAInit,1./errNotherMCA/errNotherMCA/10./10.)
# NtotAInit <- OtherAInit + DYAInit

# DYBInit    ~ dunif (1, 20*NDYMCB)
# OtherBInit ~ dnorm (NotherMCB/NDYMCB*DYBInit,1./errNotherMCB/errNotherMCB/10./10.)
# NtotBInit <- OtherBInit + DYBInit
 
 OtherAInit ~ dunif (1, 100000)
 DYAInit    ~ dunif (1, 1000000)
 NtotAInit <- OtherAInit + DYAInit

 OtherBInit ~ dunif (1, 100000)
 DYBInit    ~ dunif (1, 1000000)
 NtotBInit <- OtherBInit + DYBInit



 e1A  ~ dunif(0,1)
 e2A  ~ dunif(0,1)
 mu1A ~ dunif(0,1)
 mu2A ~ dunif(0,1)

#    e1AOther  ~ dunif(0,1)
#    e2AOther  ~ dunif(0,1)
#    mu1AOther <- e1AOther * mu1A / e1A
#    mu2AOther <- e2AOther * mu2A / e2A

 e1AOther   ~ dunif(0,1)
 e2AOther   ~ dunif(0,1)
 mu1AOther  ~ dunif(0,1)
 mu2AOther  <- mu2A * mu1A / mu1AOther * e1AOther * e2AOther / e2A / e1A 

 e1B  ~ dunif(0,1)
 e2B  ~ dunif(0,1)
 mu1B ~ dunif(0,1)
 mu2B ~ dunif(0,1)

#   e1BOther  ~ dunif(0,1)
#   e2BOther  ~ dunif(0,1)
#   mu1BOther <- e1BOther * mu1B / e1B
#   mu2BOther <- e2BOther * mu2B / e2B

 e1BOther   ~ dunif(0,1)
 e2BOther   ~ dunif(0,1)
 mu1BOther  ~ dunif(0,1)
 mu2BOther  <- mu2B * mu1B / mu1BOther * e1BOther * e2BOther / e2B / e1B 


}






