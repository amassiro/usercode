##########################################################

##########################################################

var
   ########################
   #### Control region ####

   e1A, e2A, mu1A, mu2A,
   peeA, pemuA, pmueA, pmumuA,
   NeeA, NemuA, NmueA, NmumuA,
   NtotA,
   pA[4],
   NA[4],

   e1B, e2B, mu1B, mu2B,
   peeB, pemuB, pmueB, pmumuB,
   NeeB, NemuB, NmueB, NmumuB,
   NtotB,
   pB[4],
   NB[4],
   
   p[8],
   N[8],
   Ntot,

   Ree, Rmumu, 

   NDYeeA, NDYmumuA,
   NDYeeB, NDYmumuB,


   #######################
   #### Signal region ####

   e1Amet, e2Amet, mu1Amet, mu2Amet,
   peeAmet, pemuAmet, pmueAmet, pmumuAmet,
   NeeAmet, NemuAmet, NmueAmet, NmumuAmet,
   NtotAmet,
   pAmet[4],
   NAmet[4],

   e1Bmet, e2Bmet, mu1Bmet, mu2Bmet,
   peeBmet, pemuBmet, pmueBmet, pmumuBmet,
   NeeBmet, NemuBmet, NmueBmet, NmumuBmet,
   NtotBmet,
   pBmet[4],
   NBmet[4],
   
   pmet[8],
   Nmet[8],
   Ntotmet,

   NtotABeemet, NtotABmumumet,
   peeBFinal, pmumuBFinal,


   Reemet, Rmumumet, 

   NDYeeAmet, NDYmumuAmet,
   NDYeeBmet, NDYmumuBmet

 

##########################################################

data {

 ########################
 #### Control region ####

 NtotA <- NeeA + NemuA + NmueA + NmumuA
 NtotB <- NeeB + NemuB + NmueB + NmumuB
 Ntot  <- NtotA + NtotB

 NA[1] <- NeeA
 NA[2] <- NemuA
 NA[3] <- NmueA
 NA[4] <- NmumuA

 NB[1] <- NeeB
 NB[2] <- NemuB
 NB[3] <- NmueB
 NB[4] <- NmumuB


 N[1] <- NeeA
 N[2] <- NemuA
 N[3] <- NmueA
 N[4] <- NmumuA
 N[5] <- NeeB
 N[6] <- NemuB
 N[7] <- NmueB
 N[8] <- NmumuB


 #######################
 #### Signal region ####

 NtotAmet <- NeeAmet + NemuAmet + NmueAmet + NmumuAmet
 NtotBmet <- NeeBmet + NemuBmet + NmueBmet + NmumuBmet
 Ntotmet  <- NtotAmet + NtotBmet

 NAmet[1] <- NeeAmet
 NAmet[2] <- NemuAmet
 NAmet[3] <- NmueAmet
 NAmet[4] <- NmumuAmet

 NBmet[1] <- NeeBmet
 NBmet[2] <- NemuBmet
 NBmet[3] <- NmueBmet
 NBmet[4] <- NmumuBmet


 Nmet[1] <- NeeAmet
 Nmet[2] <- NemuAmet
 Nmet[3] <- NmueAmet
 Nmet[4] <- NmumuAmet
 Nmet[5] <- NeeBmet
 Nmet[6] <- NemuBmet
 Nmet[7] <- NmueBmet
 Nmet[8] <- NmumuBmet


 NeeBmetTemp   <- NeeBmet
 NmumuBmetTemp <- NmumuBmet

}

##########################################################

model
{

 ###############
 #### model ####
 ###############


 ########################
 #### control region ####

 ###########################################
 ##### Multinomial: ee, emu, mue, mumu #####
 ###########################################

 ##################################
 ##### Probability definition #####
 ##################################


 ################
 #### A zone ####
 ################

 peeA   <- (0.5 * DYAInit * e1A * e2A + 0.25 * OtherAInit * e1AOther * e2AOther) / NtotA
 pemuA  <- 0.25 * OtherAInit * e1AOther * mu2AOther / NtotA
 pmueA  <- pemuA * mu1AOther * e2AOther / e1AOther / mu2AOther
 pmumuA <- (0.5 * DYAInit * mu1A * mu2A + 0.25 * OtherAInit * mu1AOther * mu2AOther) / NtotA

 pA[1] <- peeA
 pA[2] <- pemuA
 pA[3] <- pmueA
 pA[4] <- pmumuA


 ################
 #### B zone ####
 ################

 peeB   <- (0.5 * DYBInit * e1B * e2B + 0.25 * OtherBInit * e1BOther * e2BOther) / NtotB
 pemuB  <- 0.25 * OtherBInit * e1BOther * mu2BOther / NtotB
 pmueB  <- pemuB * mu1BOther * e2BOther / e1BOther / mu2BOther
 pmumuB <- (0.5 * DYBInit * mu1B * mu2B + 0.25 * OtherBInit * mu1BOther * mu2BOther) / NtotB

 pB[1] <- peeB
 pB[2] <- pemuB
 pB[3] <- pmueB
 pB[4] <- pmumuB


 #########################
 #### multinomial A+B ####
 #########################

 totP <- pA[1] + pA[2] + pA[3] + pA[4] + pB[1] + pB[2] + pB[3] + pB[4]
 
 p[1] <- pA[1] / totP
 p[2] <- pA[2] / totP
 p[3] <- pA[3] / totP
 p[4] <- pA[4] / totP
 p[5] <- pB[1] / totP
 p[6] <- pB[2] / totP
 p[7] <- pB[3] / totP
 p[8] <- pB[4] / totP

 N ~ dmulti (p, Ntot)


 ##########
 ### ee ###

 meanNDYeeA <-  p[1] / (0.5 * DYAInit * e1A * e2A + 0.25 * OtherAInit * e1AOther * e2AOther) * (0.5 * DYAInit * e1A * e2A) * Ntot
 meanNDYeeB <-  p[5] / (0.5 * DYBInit * e1B * e2B + 0.25 * OtherBInit * e1BOther * e2BOther) * (0.5 * DYBInit * e1B * e2B) * Ntot
 NDYeeA <-  (0.5 * DYAInit * e1A * e2A) / NtotA
 NDYeeB <-  (0.5 * DYBInit * e1B * e2B) / NtotB

 Ree       <- ( NDYeeA ) / ( NDYeeB )
 meanRee   <- ( meanNDYeeA ) / ( meanNDYeeB )
 ReeSimple <- (NeeA - sqrt(NeeA / NmumuA * NemuA * NmueA) ) / (NeeB - sqrt(NeeB / NmumuB * NemuB * NmueB))
 
 ############
 ### mumu ###

 meanNDYmumuA <-  p[4] / (0.5 * DYAInit * mu1A * mu2A + 0.25 * OtherAInit * mu1AOther * mu2AOther) * (0.5 * DYAInit * mu1A * mu2A) * Ntot
 meanNDYmumuB <-  p[8] / (0.5 * DYBInit * mu1B * mu2B + 0.25 * OtherBInit * mu1BOther * mu2BOther) * (0.5 * DYBInit * mu1B * mu2B) * Ntot
 NDYmumuA <-  (0.5 * DYAInit * mu1A * mu2A) / NtotA
 NDYmumuB <-  (0.5 * DYBInit * mu1B * mu2B) / NtotB

 Rmumu     <- ( NDYmumuA ) / ( NDYmumuB )
 meanRmumu <- ( meanNDYmumuA ) / ( meanNDYmumuB )
 RmumuSimple   <- (NmumuA - sqrt(NmumuA / NeeA * NmueA * NemuA) ) / (NmumuB - sqrt(NmumuB / NeeB * NmueB * NemuB)) 
  
  



 ################
 #### priors ####
 ################

# OtherAInit ~ dnorm (NotherMCA,1./errNotherMCA/errNotherMCA/20./20.)
# DYAInit    ~ dnorm (NDYMCA,1./errNDYMCA/errNDYMCA/20./20.)
# NtotAInit <- OtherAInit + DYAInit

# OtherBInit ~ dnorm (NotherMCB,1./errNotherMCB/errNotherMCB/20./20.)
# DYBInit    ~ dnorm (NDYMCB,1./errNDYMCB/errNDYMCB/20./20.)
# NtotBInit <- OtherBInit + DYBInit

 OtherAInit ~ dunif (100, 100000000)
 DYAInit    ~ dunif (100, 1000000000)
 NtotAInit <- OtherAInit + DYAInit
 
 OtherBInit ~ dunif (100, 100000000)
 DYBInit    ~ dunif (100, 1000000000)
 NtotBInit <- OtherBInit + DYBInit



 e1A  ~ dunif(0,1)
 e2A  ~ dunif(0,1)
 mu1A ~ dunif(0,1)
 mu2A ~ dunif(0,1)

 e1AOther  ~ dunif(0,1)
 e2AOther  ~ dunif(0,1)
 mu1AOther <- e1AOther * mu1A / e1A
 mu2AOther <- e2AOther * mu2A / e2A

 e1B  ~ dunif(0,1)
 e2B  ~ dunif(0,1)
 mu1B ~ dunif(0,1)
 mu2B ~ dunif(0,1)

 e1BOther  ~ dunif(0,1)
 e2BOther  ~ dunif(0,1)
 mu1BOther <- e1BOther * mu1B / e1B
 mu2BOther <- e2BOther * mu2B / e2B




 #################################################################################################
 ##### add additional smearing to Ree and Rmumu due to dependence on MET (or other) selection ####

 ReeToUse   ~ dnorm (Ree,1./ (0.03*0.03 * Ree * Ree))
 RmumuToUse ~ dnorm (Rmumu,1./ (0.03*0.03 * Rmumu * Rmumu))


 #######################
 #######################
 #### Signal region ####
 #######################

 ###########################################
 ##### Multinomial: ee, emu, mue, mumu #####
 ###########################################

 ##################################
 ##### Probability definition #####
 ##################################

 ################
 #### B zone ####
 ################

 peeBmet   <- (0.5 * DYBmetInit * e1Bmet * e2Bmet + 0.25 * OtherBmetInit * e1BmetOther * e2BmetOther) / NtotBmet
 pemuBmet  <- 0.25 * OtherBmetInit * e1BmetOther * mu2BmetOther / NtotBmet
# pmueBmet  <- 0.25 * OtherBmetInit * mu1BmetOther * e2BmetOther / NtotBmet
 pmueBmet  <- pemuBmet * mu1BmetOther * e2BmetOther / e1BmetOther / mu2BmetOther
 pmumuBmet <- (0.5 * DYBmetInit * mu1Bmet * mu2Bmet + 0.25 * OtherBmetInit * mu1BmetOther * mu2BmetOther) / NtotBmet

 totPBmet <- peeBmet + pemuBmet + pmueBmet + pmumuBmet

 pBmet[1] <- peeBmet   / totPBmet
 pBmet[2] <- pemuBmet  / totPBmet
 pBmet[3] <- pmueBmet  / totPBmet
 pBmet[4] <- pmumuBmet / totPBmet

 NBmet ~ dmulti (pBmet, NtotBmet)

 ##############################
 #### DY inference: B -> A ####
 ##############################
 
 ############
 #### ee ####

 peeBmetFinal   <-        pBmet[1]
 peeAmetFinal   <- ReeToUse * (pBmet[1] * (0.5 * DYBmetInit * e1Bmet * e2Bmet) / (0.5 * DYBmetInit * e1Bmet * e2Bmet + 0.25 * OtherBmetInit * e1BmetOther * e2BmetOther))
 peeBFinal <- peeBmetFinal / (peeBmetFinal + peeAmetFinal)

 NeeBmet ~ dbin ( peeBFinal, NtotABeemet)

 NAeemetDYexact  <-   NtotABeemet - NeeBmet
 NeeBmetDYOther  <-   NtotABeemet * peeBFinal / (0.5 * DYBmetInit * e1Bmet * e2Bmet) * (0.5 * DYBmetInit * e1Bmet * e2Bmet + 0.25 * OtherBmetInit * e1BmetOther * e2BmetOther)
 NAeemetDY       <-   NtotABeemet * (1-peeBFinal)
 NtotABeemetDY   <-   NAeemetDY + NeeBmet * (pBmet[1] * (0.5 * DYBmetInit * e1Bmet * e2Bmet) / (0.5 * DYBmetInit * e1Bmet * e2Bmet + 0.25 * OtherBmetInit * e1BmetOther * e2BmetOther))
 
 NAeemetDYSimple        <- (NeeBmet - sqrt(NeeBmet / NmumuBmet * NemuBmet * NmueBmet) ) * Ree
 NAeemetDYSimpleSimple  <- (NeeBmet - sqrt(NeeBmet / NmumuBmet * NemuBmet * NmueBmet) ) * ReeSimple


 ##############
 #### mumu ####

 pmumuBmetFinal   <-          pBmet[4]
 pmumuAmetFinal   <- RmumuToUse * (pBmet[4] * (0.5 * DYBmetInit * mu1Bmet * mu2Bmet) / (0.5 * DYBmetInit * mu1Bmet * mu2Bmet + 0.25 * OtherBmetInit * mu1BmetOther * mu2BmetOther))
 pmumuBFinal <- pmumuBmetFinal / (pmumuBmetFinal + pmumuAmetFinal)

 NmumuBmet ~ dbin ( pmumuBFinal, NtotABmumumet)

 NAmumumetDYexact  <-   NtotABmumumet - NmumuBmet
 NmumuBmetDYOther  <-   NtotABmumumet * pmumuBFinal / (0.5 * DYBmetInit * mu1Bmet * mu2Bmet) * (0.5 * DYBmetInit * mu1Bmet * mu2Bmet + 0.25 * OtherBmetInit * mu1BmetOther * mu2BmetOther)
 NAmumumetDY       <-   NtotABmumumet * (1-pmumuBFinal)
 NtotABmumumetDY   <-   NAmumumetDY + NmumuBmet * (pBmet[4] * (0.5 * DYBmetInit * e1Bmet * e2Bmet) / (0.5 * DYBmetInit * e1Bmet * e2Bmet + 0.25 * OtherBmetInit * e1BmetOther * e2BmetOther))

 NAmumumetDYSimple        <- (NmumuBmet - sqrt(NmumuBmet / NeeBmet * NmueBmet * NemuBmet) ) * Rmumu
 NAmumumetDYSimpleSimple  <- (NmumuBmet - sqrt(NmumuBmet / NeeBmet * NmueBmet * NemuBmet) ) * RmumuSimple




 ################
 #### priors ####
 ################

## e1Bmet  ~ dunif(0,1)
## e2Bmet  ~ dunif(0,1)
## mu1Bmet ~ dunif(0,1)
## mu2Bmet ~ dunif(0,1)

####
#### in this case I have to require also the two efficiencies in DY and Other to be the same! ####
#### Nee = Nee - sqrt(Nee / Nmumu * Nemu * Nmue)
####
### but this is not a good approximation!!!  --> Ree and Rmumu SBALLA!!!
# e1BmetOther  <- e1Bmet
# e2BmetOther  <- e2Bmet
# mu1BmetOther <- mu1Bmet
# mu2BmetOther <- mu2Bmet
##
## then I make the hypothesis that the ratio between Other e1/mu1 and DY e1/mu1 efficiencies are the same 
## in signal region and in control region
##
## (e1/mu1) DY / (e1/mu1) Other in Control = (e1/mu1) DY / (e1/mu1) Other in Signal
## (e1B/mu1B) / (e1BOther/mu1BOther) =  (e1Bmet/mu1Bmet) / (e1BmetOther/mu1BmetOther)
##
## in addition to
## 
## (e1Bmet/mu1Bmet) = (e1BmetOther/mu1BmetOther)
##
## then
##
## (e1B/mu1B) / (e1BOther/mu1BOther) = 1
## e1B <- mu1B * (e1BOther/mu1BOther)
##
## and the same stands also for "2"
##
## e2B <- mu2B * (e2BOther/mu2BOther)
##
## it is useless, since already assumed in control region!!!
##
##################################################################
##
## then I make another hypothesis: that the double ratio between Other e1/mu1 and DY e1/mu1 efficiencies and the same for "2" are the same 
## in signal region and in control region
##
## [(e1/mu1) DY / (e1/mu1) Other]/ [(e2/mu2) DY / (e2/mu2) Other] in Control = [(e1/mu1) DY / (e1/mu1) Other]/ [(e2/mu2) DY / (e2/mu2) Other] in Signal
##
## [(e1B/mu1B) / (e1BOther/mu1BOther)]/ [(e2B/mu2B) / (e2BOther/mu2BOther)] = [(e1Bmet/mu1Bmet) / (e1BmetOther/mu1BmetOther)]/ [(e2Bmet/mu2Bmet) / (e2BmetOther/mu2BmetOther)]
##
## in addition to
## 
## (e1Bmet/mu1Bmet) = (e1BmetOther/mu1BmetOther)
##
## but this is automatically true! 
##
###################################################################
##
## with this you are not enough constrained !!!
##
#
# e1BmetOther  ~ dunif(0,1)
# e2BmetOther  ~ dunif(0,1)
# mu1BmetOther <- e1BmetOther * mu1Bmet / e1Bmet
# mu2BmetOther <- e2BmetOther * mu2Bmet / e2Bmet
#
##
###
### the number of events is the same of before!!!
##
#
#
OtherBmetInit <- OtherBInit
DYBmetInit    <- DYBInit
NtotBmetInit <- OtherBmetInit + DYBmetInit
#
#
##
###
######
#### and the efficiencies between electron and muon is the same as in control region
######
## (e1Bmet/mu1Bmet) = (e1B/mu1B)
## (e2Bmet/mu2Bmet) = (e2B/mu2B)
## (e1BmetOther/mu1BmetOther) = (e1BOther/mu1BOther)
## (e2BmetOther/mu2BmetOther) = (e2BOther/mu2BOther)
##
## in addition to
## 
## (e1Bmet/mu1Bmet) = (e1BmetOther/mu1BmetOther)
##
#e1BmetOther  ~ dunif(0,1)
#e2BmetOther  ~ dunif(0,1)
#mu2BmetOther <- e2BmetOther * mu2Bmet / e2Bmet
#mu1BmetOther <- e1BmetOther * (mu1BOther/e1BOther)
#
##
###
##
#
#  e1Bmet  <- mu1Bmet *(e1B/mu1B)
#  e2Bmet  <- mu2Bmet *(e2B/mu2B)
#  mu1Bmet ~ dunif(0,1)
#  mu2Bmet ~ dunif(0,1)
# 
######
###
##
#
#
# e1BmetOther  ~ dunif(0,e1BOther)
# e2BmetOther  ~ dunif(0,e2BOther)
e1BmetOther   ~ dunif(0,1)
e2BmetOther   ~ dunif(0,1)
#  mu1BmetOther  ~ dunif(0,1)
#  mu2BmetOther  ~ dunif(0,1)
mu1BmetOther <- e1BmetOther * (mu1Bmet / e1Bmet)
mu2BmetOther <- e2BmetOther * (mu2Bmet / e2Bmet)
#
##
###
# e1Bmet  <- mu1Bmet *(e1B/mu1B)
# e2Bmet  <- mu2Bmet *(e2B/mu2B)
e1Bmet  ~ dunif(0,1)
e2Bmet  ~ dunif(0,1)
mu1Bmet ~ dunif(0,1)
mu2Bmet ~ dunif(0,1)
###
##
#


# meanNtotABeemet   ~ dunif (0,100)
# meanNtotABmumumet ~ dunif (0,100)

# NtotABeemet   ~ dpois (meanNtotABeemet)
# NtotABmumumet ~ dpois (meanNtotABmumumet)

# OtherBmetInit ~ dunif (100, 100000000)
# DYBmetInit    ~ dunif (100, 100000000)
# NtotBmetInit <- OtherBmetInit + DYBmetInit


# OtherBmetInit ~ dnorm (NotherMCBmet,1./errNotherMCBmet/errNotherMCBmet/20./20.)
# DYBmetInit    ~ dnorm (NDYMCBmet,1./errNDYMCBmet/errNDYMCBmet/20./20.)
# NtotBmetInit <- OtherBmetInit + DYBmetInit

## tempOtherBmetInit ~ dunif (1,10000)
## OtherBmetInit <- round (tempOtherBmetInit)
## tempDYBmetInit ~ dunif (1,100000)
## DYBmetInit <- round (tempDYBmetInit)
## NtotBmetInit <- OtherBmetInit + DYBmetInit


 tempNtotABeemet   ~ dunif (NeeBmetTemp,100000)
 tempNtotABmumumet ~ dunif (NmumuBmetTemp,100000)

 NtotABeemet   <- round (tempNtotABeemet)
 NtotABmumumet <- round (tempNtotABmumumet)


 ####################################
 #### M method inference : A-> A ####
 ####################################


 peeAmet   <- (0.5 * DYAmetInit * e1Amet * e2Amet + 0.25 * OtherAmetInit * e1AmetOther * e2AmetOther) / NtotAmet
 pemuAmet  <- 0.25 * OtherAmetInit * e1Amet * mu2Amet / NtotAmet
 pmueAmet  <- 0.25 * OtherAmetInit * mu1Amet * e2Amet / NtotAmet
 pmumuAmet <- (0.5 * DYAmetInit * mu1Amet * mu2Amet + 0.25 * OtherAmetInit * mu1AmetOther * mu2AmetOther) / NtotAmet

 totPAmet <- peeAmet + pemuAmet + pmueAmet + pmumuAmet

 pAmet[1] <- peeAmet   / totPAmet
 pAmet[2] <- pemuAmet  / totPAmet
 pAmet[3] <- pmueAmet  / totPAmet
 pAmet[4] <- pmumuAmet / totPAmet

 NAmet ~ dmulti (pAmet, NtotAmet)

 NAeemetDYM   <- (0.5 * DYAmetInit * e1Amet * e2Amet)   / (0.5 * DYAmetInit * e1Amet * e2Amet + 0.25 * OtherAmetInit * e1AmetOther * e2AmetOther)     * pAmet[1] * NtotAmet   
 NAmumumetDYM <- (0.5 * DYAmetInit * mu1Amet * mu2Amet) / (0.5 * DYAmetInit * mu1Amet * mu2Amet + 0.25 * OtherAmetInit * mu1AmetOther * mu2AmetOther) * pAmet[4] * NtotAmet   
 NAeemetAllM   <- pAmet[1] * NtotAmet
 NAmumumetAllM <- pAmet[4] * NtotAmet

 
 ################
 #### priors ####
 ################


 e1Amet  ~ dunif(0,1)
 e2Amet  ~ dunif(0,1)
 mu1Amet ~ dunif(0,1)
 mu2Amet ~ dunif(0,1)

 e1AmetOther  ~ dunif(0,1)
 e2AmetOther  ~ dunif(0,1)
 mu1AmetOther <- e1AmetOther * mu1Amet / e1Amet
 mu2AmetOther <- e2AmetOther * mu2Amet / e2Amet



 OtherAmetInit ~ dunif (100, 100000000)
 DYAmetInit    ~ dunif (100, 1000000000)
 NtotAmetInit <- OtherAmetInit + DYAmetInit
 
# OtherAmetInit ~ dnorm (NotherMCAmet,1./errNotherMCAmet/errNotherMCAmet/20./20.)
# DYAmetInit    ~ dnorm (NDYMCAmet,1./errNDYMCAmet/errNDYMCAmet/20./20.)
# NtotAmetInit <- OtherAmetInit + DYAmetInit

# meanNtotAmumueemet ~ dunif (0,100)
# NtotAmumueemet ~ dpois (meanNtotAmumueemet)

}






